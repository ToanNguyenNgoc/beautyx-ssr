{"version":3,"file":"static/js/824.74cea8cc.chunk.js","mappings":"gJAqEA,UAhEA,SAAaA,GAGT,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,CACjCC,UAAW,GACXC,KAAM,GACNC,gBAAiB,KAkCrB,OAFAC,QAAQC,IAAIP,EAAOG,YAGfK,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAKC,GAAG,yBACRD,EAAAA,EAAAA,KAAA,QAAAD,SAAM,aACNC,EAAAA,EAAAA,KAAA,SAAOE,KAAK,OAAOC,SAAWC,GAAMb,EAAU,IAAKD,EAAQG,UAAWW,EAAEC,OAAOC,MAAMC,WAAW,IAAK,IAAIC,QAAQ,KAAM,YACvHR,EAAAA,EAAAA,KAAA,UAAQS,QArCHC,OAqCiBX,SAAE,cACxBC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,QAAAD,SAAM,oBACNC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,QAAAD,SAAM,aACNC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,QAAAD,SAAM,oBACNC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,QAAAD,SAAM,aACNC,EAAAA,EAAAA,KAAA,SAAOE,KAAK,OAAOC,SAAWC,GAAMb,EAAU,IAAKD,EAAQI,KAAMU,EAAEC,OAAOC,QAAUK,YAAY,SAChGX,EAAAA,EAAAA,KAAA,UACIS,QArBKG,KARQC,WACrB,IAEIjB,QAAQC,IAAIP,EAChB,CAAE,MAAOwB,GACLlB,QAAQC,IAAIiB,EAChB,GAGAC,EAAkB,EAoBQhB,SACrB,aAKb,C","sources":["features/Otp/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\n// import { authentication, RecaptchaVerifier, signInWithPhoneNumber} from '../../firebase';\n// import authentication from '../../api/authApi';\n// import { vnPhoneCheck } from '../../utils/validateForm';\n\nfunction Otp(props: any) {\n    // const [phoneNumber, setPhoneNumber] = useState('');\n    // const [verificationId, setVerificationId] = useState('')\n    const [values, setValues] = useState({\n        telephone: '',\n        code: '',\n        verification_id: ''\n    })\n    const sign = () => {\n        // console.log(values.telephone);\n        // if (values.telephone === \"\") return;\n\n        // let verify = new firebase.auth.RecaptchaVerifier('recaptcha-container', {\n        //     'size': 'invisible'\n        // });\n\n        // auth.signInWithPhoneNumber(values.telephone, verify).then((result) => {\n        //     console.log(result)\n        //     setValues({\n        //         ...values,\n        //         verification_id: result?.verificationId\n        //     })\n        // })\n        //     .catch((err) => {\n        //         console.log(err)\n        //     });\n    }\n    const handleForgotPass = async () => {\n        try {\n            // await authentication.forgotPassword(values);\n            console.log(values);\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    const onSubmit = () => {\n        handleForgotPass()\n    }\n    console.log(values.telephone);\n\n    return (\n        <div>\n            <div id=\"recaptcha-container\"></div>\n            <span>-------</span>\n            <input type=\"text\" onChange={(e) => setValues({ ...values, telephone: e.target.value.replaceAll(\" \", '').replace(/0/i, '+84') })} />\n            <button onClick={sign} >send otp</button>\n            <br />\n            <span>--------------</span>\n            <br />\n            <span>-------</span>\n            <br />\n            <span>--------------</span>\n            <br />\n            <span>-------</span>\n            <input type=\"text\" onChange={(e) => setValues({ ...values, code: e.target.value })} placeholder='Otp' />\n            <button\n                onClick={onSubmit}\n            >\n                submit\n            </button>\n        </div>\n    );\n}\n\nexport default Otp;"],"names":["props","values","setValues","useState","telephone","code","verification_id","console","log","_jsxs","children","_jsx","id","type","onChange","e","target","value","replaceAll","replace","onClick","sign","placeholder","onSubmit","async","error","handleForgotPass"],"sourceRoot":""}